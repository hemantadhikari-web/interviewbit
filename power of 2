/*int Solution::power(string A) {
    long long int a=0;
    int n =A.size();
    for(int i=0;i<n;i++){
        a += A[i]-'0';
        a*=10;
    }
    a /=10;
    cout<<a<<endl;
    if(a==0 or a==1){
        return 0;
    }

   while(a>1){
       cout<<"a "<<a<<" "<<a%2<<endl;
       if(a%2!=0){
          // cout<<"kaise "<<a%2<<endl;
           return 0;
       }
       a /= 2;
   }
    return 1;
}
*/

int Solution::power(string A) 

{

    string B = "2";

    while(1)

    {

        if(B.size()>A.size()) break;

        // cout<<B<<" ";

        if(B==A) return 1;

        string C = "";

        int n = B.size();

        int carry = 0;

        for(int j=n-1;j>=0;j--)

        {

            int x = (B[j]-'0')*2;

            x+=carry;

            C.push_back('0'+(x%10));

            carry = x/10;

        }
        //cout<<C<<endl;

        while(carry>0)

        {

            C.push_back('0'+carry%10);

            carry/=10;

        }

        reverse(C.begin(), C.end());

        B = C;

    }

    return 0;

}
