void backtrack(vector<int> &A, int st, vector<vector<int> > &v, vector<int> &v1)
{
    if(st>=A.size()){
        v.push_back(v1);
        return ;
    }

        v1.push_back(A[st]);
        backtrack(A, st+1, v, v1);
        v1.pop_back();
        backtrack(A, st+1, v, v1);
}

vector<vector<int> > Solution::subsets(vector<int> &A) 
{
    // Do not write main() function.
    // Do not read input, instead use the arguments to the function.
    // Do not print the output, instead return values as specified
    // Still have a doubt. Checkout www.interviewbit.com/pages/sample_codes/ for more details

    sort(A.begin(), A.end());
    
    vector<vector<int> > v;
    vector<int> v1;
    
    backtrack(A, 0, v, v1);
    sort(v.begin(),v.end());
    return v;
}
