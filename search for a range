int binary(vector<int> A, int B){
    int l=0,r=A.size();

    while(l<=r){
        int mid = (l+r)/2;
        if(A[mid]==B){
            return mid;
        }else if(A[mid]>B){
            r= mid-1;
        }else{
            l = mid + 1;
        }
    }
    return -1;
}

vector<int> Solution::searchRange(const vector<int> &A, int B) {
    int val  = binary(A,B);
    vector<int> ans;

    if(val == -1){
        ans.push_back(-1);
        ans.push_back(-1);
        return ans;
    }
    int start=val,end=val;
    //for left

    while(start>0){
        if(A[start-1]==B){
            start--;
        }else{
            break;
        }
    }
    while(end<A.size()-1){
        if(A[end+1]==B){
            end++;
        }else{
            break;
        }
    }

    ans.push_back(start);
    ans.push_back(end);
    return ans;





}
