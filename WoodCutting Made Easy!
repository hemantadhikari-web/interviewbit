bool check(vector < int > & A, int val, int B) {
  int rem = 0;
  int n = A.size();
  for (int i = 0; i < n; i++) {
    if (A[i] > val) rem += A[i] - val;
  }

  while(A[n-1]>val and n-1>=0){
      rem += A[n-1] -val;
      n--;
  }
  if (rem >= B) return true;
  return false;
}
int Solution::solve(vector < int > & A, int B) {
  int low = 0;
  int high = 1000000;
  int ans = 0;
  sort(A.begin(),A.end());
  while (low <= high) {
    int mid = (low + high) / 2;
    if (check(A, mid, B)) {
      ans = mid;
      low = mid + 1;
    } else high = mid - 1;

    cout<<low<<" " <<high<<" "<<mid<<endl;

    //cout<<"mid "<<mid<<endl;
  }
  return ans;
}
