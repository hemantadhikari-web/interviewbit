int binarySearch(vector<int> &A,int B ,int l, int r){

    //cout<<mid<<" mid"<<endl;
    while(l<=r){
        int mid = (l+r)/2;
        if(A[mid]==B){
            return B;
        }
        else if(A[mid]>B){
            r= mid-1;
            //cout<<"r "<<r<<endl;
        }else{
            l=mid+1;
            //cout<<"l "<<l<<endl;
        }
    }
    return -1;
}

int Solution::searchMatrix(vector<vector<int> > &A, int B) {
    int ans=0;
    for(int i=0;i<A.size();i++){
        vector<int> temp =A[i];
       // cout<<"r1"<<endl;
        int l=0,r=temp.size();
        //cout<<temp[0]<<" "<<temp[temp.size()-1]<<endl;
        if(temp[0]<=B and temp[temp.size()-1]>=B){
            //cout<<i<<endl;
            ans = binarySearch(temp,B,l,r);
            //cout<<ans<<endl;
            if(ans !=-1){
            return 1;
            }
        }
    }


return 0;

}
