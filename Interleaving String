int Solution::isInterleave(string A, string B, string C) {
    int m = A.size();
    int n = B.size();
    if(m+n!=C.size()){return false;}
    
    vector<vector<bool>>dp(m+1,vector<bool>(n+1,1));
    
    for(int i=1;i<m+1;i++){
        if(dp[i-1][0]==false){dp[i][0]=false;}
        else{
            if(A[i-1]!=C[i-1]){
                dp[i][0] = false;
            }
        }
    }
    
    for(int j=1;j<n+1;j++){
        if(dp[0][j-1]==false){dp[0][j]= false;}
        else{
            if(B[j-1]!=C[j-1]){
                dp[0][j] = false;
            }
        }
    }
    
    for(int i=1;i<m+1;i++){
        for(int j = 1;j<n+1;j++){
            int val = i+j -1;
            if(A[i-1]==C[val] and B[j-1]==C[val]){
                dp[i][j] = dp[i-1][j]||dp[i][j-1];
            }else if(A[i-1]==C[val]){
                dp[i][j]= dp[i-1][j];
            }else if(B[j-1]==C[val]){
                dp[i][j]= dp[i][j-1];
            }else{
                dp[i][j] =false;
            }
        }
    }
    return dp[m][n];
}
